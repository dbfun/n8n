#
# docker-compose.yml:
# * https://github.com/n8n-io/n8n-hosting/tree/main/docker-compose/withPostgres
# * https://github.com/n8n-io/self-hosted-ai-starter-kit/blob/main/docker-compose.yml
# конфиги: https://docs.n8n.io/hosting/configuration/environment-variables/
#

x-n8n: &service-n8n
  image: n8n_n8n:${CI_COMMIT_SHA}
  links:
    - postgres
  restart: unless-stopped
  depends_on:
    postgres:
      condition: service_healthy
  extra_hosts:
    - "host.docker.internal:host-gateway"
  networks:
    - frontend
    - backend

x-nocodb: &service-nocodb
  image: nocodb/nocodb:latest
  restart: unless-stopped
  depends_on:
    postgres:
      condition: service_healthy
  networks:
    - frontend
    - backend

services:

  n8n:
    <<: *service-n8n
    hostname: n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - WEBHOOK_URL
      - N8N_EDITOR_BASE_URL
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_ENCRYPTION_KEY
      - GENERIC_TIMEZONE=Europe/Moscow
      - N8N_HIDE_USAGE_PAGE=true
      - N8N_METRICS=true
      - N8N_LISTEN_ADDRESS=0.0.0.0
    volumes:
      # домашний каталог n8n
      - ${DATA_PATH}/n8n:/home/node/.n8n
      # для сохранения файлов в локальный каталог (для отладки)
      - ./shared-files:/home/node/shared-files
      # резервные копии
      - ./backups:/home/node/backups
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`$APP_DOMAIN`)"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.http.routers.n8n.entrypoints=https"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=letsencrypt"

  test-n8n:
    <<: *service-n8n
    hostname: test-n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${TEST_POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - WEBHOOK_URL=${TEST_WEBHOOK_URL}
      - N8N_EDITOR_BASE_URL=${TEST_N8N_EDITOR_BASE_URL}
      - N8N_RUNNERS_ENABLED=true
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_ENCRYPTION_KEY
      - GENERIC_TIMEZONE=Europe/Moscow
      - N8N_HIDE_USAGE_PAGE=true
      - N8N_METRICS=true
      - N8N_LISTEN_ADDRESS=0.0.0.0
    volumes:
      # домашний каталог n8n
      - ${DATA_PATH}/test-n8n:/home/node/.n8n
      # для сохранения файлов в локальный каталог (для отладки)
      - ./shared-files:/home/node/shared-files
      # резервные копии - не предусмотрены
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.test-n8n.rule=Host(`$TEST_APP_DOMAIN`)"
      - "traefik.http.services.test-n8n.loadbalancer.server.port=5678"
      - "traefik.http.routers.test-n8n.entrypoints=https"
      - "traefik.http.routers.test-n8n.tls=true"
      - "traefik.http.routers.test-n8n.tls.certresolver=letsencrypt"

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    volumes:
      - ollama_storage:/root/.ollama
    networks:
      - backend

  init-ollama:
    image: ollama/ollama:latest
    container_name: ollama-pull-llama
    volumes:
      - ollama_storage:/root/.ollama
    entrypoint: /bin/sh
    command:
      - "-c"
      - "sleep 3; export OLLAMA_HOST=ollama:11434; ollama pull mxbai-embed-large; ollama pull llama3.1:8b"
    networks:
      - backend

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    restart: unless-stopped
    volumes:
      - ${DATA_PATH}/qdrant:/qdrant/storage
    networks:
      - frontend
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qdrant.rule=Host(`$QDRANT_DOMAIN`)"
      - "traefik.http.routers.qdrant.entrypoints=https"
      - "traefik.http.routers.qdrant.tls=true"
      - "traefik.http.routers.qdrant.tls.certresolver=letsencrypt"
      # Auth
      - "traefik.http.routers.qdrant.middlewares=basic-auth-global"

  # Настройки https://docs.nocodb.com/getting-started/self-hosted/environment-variables/
  nocodb:
    <<: *service-nocodb
    hostname: nocodb
    environment:
      - NC_DB
      - NC_ADMIN_EMAIL
      - NC_ADMIN_PASSWORD
      - NC_DISABLE_TELE=true
      - NC_INVITE_ONLY_SIGNUP=true
      # Против роста таблицы nc_audit_v2
      - NC_DISABLE_AUDIT=true
    volumes:
      - ${DATA_PATH}/nocodb:/usr/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nocodb.rule=Host(`$NOCODB_DOMAIN`)"
      - "traefik.http.routers.nocodb.entrypoints=https"
      - "traefik.http.routers.nocodb.tls=true"
      - "traefik.http.routers.nocodb.tls.certresolver=letsencrypt"
      - "traefik.http.services.nocodb.loadbalancer.server.port=8080"

  test-nocodb:
    <<: *service-nocodb
    hostname: test-nocodb
    environment:
      - NC_DB=${TEST_NC_DB}
      - NC_ADMIN_EMAIL=${TEST_NC_ADMIN_EMAIL}
      - NC_ADMIN_PASSWORD=${TEST_NC_ADMIN_PASSWORD}
      - NC_DISABLE_TELE=true
      - NC_INVITE_ONLY_SIGNUP=true
      # Против роста таблицы nc_audit_v2
      - NC_DISABLE_AUDIT=true
    volumes:
      - ${DATA_PATH}/test-nocodb:/usr/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.test-nocodb.rule=Host(`$TEST_NOCODB_DOMAIN`)"
      - "traefik.http.routers.test-nocodb.entrypoints=https"
      - "traefik.http.routers.test-nocodb.tls=true"
      - "traefik.http.routers.test-nocodb.tls.certresolver=letsencrypt"
      - "traefik.http.services.test-nocodb.loadbalancer.server.port=8080"

  startup:
    image: n8n_startup:${CI_COMMIT_SHA}
    # смена владельца каталогов, так как n8n запускается от непривилегированного пользователя
    command: >
      sh -c "
        chown startup:startup /home/node/.n8n /home/node/test-.n8n /home/node/shared-files /home/node/backups
      "
    volumes:
      - ${DATA_PATH}/n8n:/home/node/.n8n
      - ${DATA_PATH}/test-n8n:/home/node/test-.n8n
      - ./shared-files:/home/node/shared-files
      - ./backups:/home/node/backups
    networks:
      - backend

  postgres:
    image: n8n_postgres:${CI_COMMIT_SHA}
    hostname: postgres
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - ${DATA_PATH}/postgresql:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    ports:
      - ${PG_PORT}:5432
    networks:
      - backend

  redis:
    image: redis:alpine
    hostname: redis
    restart: unless-stopped
    volumes:
      - ${DATA_PATH}/redis:/data
    networks:
      - backend

volumes:
  ollama_storage:

networks:
  frontend:
    driver: bridge
    external: true
  backend:
    driver: bridge